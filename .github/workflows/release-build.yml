name: Release Create & Build
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

env:
  BUILD_TYPE: Release

jobs:
  create-release:
    runs-on: ubuntu-latest
    name: Create Release
    outputs: 
      upload_url: ${{ steps.create_release.outputs.upload_url }} 
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false 
          body: |
              Files included in this release:
              - `BeamMP-Launcher.exe` windows build

  upload-release-files-windows:
    name: Upload Windows Release Files
    runs-on: windows-latest
    needs: create-release
    steps:
      - uses: actions/checkout@v2
        with:
            submodules: 'recursive'
      
      - name: Restore artifacts, or run vcpkg, build and cache artifacts
        uses: lukka/run-vcpkg@main
        id: runvcpkg
        with:
            vcpkgArguments: 'discord-rpc zlib rapidjson openssl'
            vcpkgDirectory: '${{ runner.workspace }}/b/vcpkg'
            vcpkgGitCommitId: '75522bb1f2e7d863078bcd06322348f053a9e33f'
            vcpkgTriplet: 'x64-windows-static'

      - name: Create Build Environment
        run: cmake -E make_directory ${{github.workspace}}/build-windows

      - name: Configure CMake
        shell: bash
        working-directory: ${{github.workspace}}/build-windows
        run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_TOOLCHAIN_FILE='${{ runner.workspace }}/b/vcpkg/scripts/buildsystems/vcpkg.cmake' -DVCPKG_TARGET_TRIPLET=x64-windows-static

      - name: Build
        working-directory: ${{github.workspace}}/build-windows
        shell: bash
        run: cmake --build . --config $BUILD_TYPE

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ${{github.workspace}}/build-windows/Release/BeamMP-Launcher.exe
          asset_name: BeamMP-Launcher.exe
          asset_content_type: application/vnd.microsoft.portable-executable
